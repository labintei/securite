# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: jraffin <jraffin@student.42.fr>            +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/10/01 16:27:27 by jraffin           #+#    #+#              #
#    Updated: 2022/10/01 16:27:29 by jraffin          ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

services:

  db:
    image: postgres:14.5-alpine
    container_name: db
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"
        ]
      interval: 1s
      start_period: 30s
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432  #only for dev rules
    networks:
      - transcendence-network
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  back:
    build:
      context: ./back
      dockerfile: Dockerfile.dev
    container_name: back
    restart: always
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./back:/app
    stdin_open: true
    tty: true
    ports:
      - 3000:3000
    networks:
      - transcendence-network
    environment:
      - PORT=3000
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - API42_UID
      - API42_SECRET
    env_file:
      - .hostname.env

  front:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    container_name: front
    restart: always
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app:/app
    ports:
      - $WEBSITE_PORT:$WEBSITE_PORT
    networks:
      - transcendence-network
    environment:
      - PORT=$WEBSITE_PORT
      - REACT_APP_API42_UID=$API42_UID
    env_file:
      - .hostname.env

  adminer:
    image: adminer:4.8.1-standalone
    container_name: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - $ADMINER_PORT:8080
    networks:
      - transcendence-network
    environment:
      - ADMINER_DEFAULT_SERVER=db

networks:
  transcendence-network:

volumes:
  db_data:
